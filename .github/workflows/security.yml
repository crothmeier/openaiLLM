name: Security Pipeline

on:
  push:
    branches: [ main, develop, "feature/*" ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better secret detection
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITLEAKS_ENABLE_SUMMARY: true
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        continue-on-error: false
      
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: false
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run ShellCheck
        run: |
          # Install shellcheck if not available
          if ! command -v shellcheck &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y shellcheck
          fi
          
          # Find and check all shell scripts
          echo "Finding shell scripts..."
          find . -type f -name "*.sh" -not -path "./llama.cpp/*" -not -path "./.git/*" > /tmp/shell_files.txt
          
          if [ -s /tmp/shell_files.txt ]; then
            echo "Checking shell scripts with ShellCheck..."
            FAILED=0
            while IFS= read -r script; do
              echo "Checking: $script"
              if ! shellcheck -S error "$script"; then
                FAILED=1
                echo "❌ ShellCheck found issues in: $script"
              fi
            done < /tmp/shell_files.txt
            
            if [ $FAILED -eq 1 ]; then
              echo "❌ ShellCheck validation failed"
              exit 1
            else
              echo "✅ All shell scripts passed ShellCheck"
            fi
          else
            echo "No shell scripts found to check"
          fi
      
      - name: Security scan summary
        if: always()
        run: |
          echo "=== Security Scan Summary ==="
          echo "✅ Security scanning completed"
          echo "Check the results above for any findings"
          echo "All CRITICAL and HIGH severity issues must be resolved"